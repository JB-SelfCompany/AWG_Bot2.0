from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Optional
from database.database import Client

def get_main_menu() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏",
        callback_data="clients_menu"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        callback_data="stats_menu"
    ))
    builder.add(InlineKeyboardButton(
        text="üíæ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏",
        callback_data="backup_menu"
    ))
    builder.add(InlineKeyboardButton(
        text="‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã",
        callback_data="settings_menu"
    ))
    
    builder.adjust(1)
    return builder.as_markup()

def get_settings_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üåê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å DNS",
        callback_data="settings_dns"
    ))
    builder.add(InlineKeyboardButton(
        text="üì° –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Endpoint",
        callback_data="settings_endpoint"
    ))
    builder.add(InlineKeyboardButton(
        text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
        callback_data="settings_show"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="main_menu"
    ))
    
    builder.adjust(1)
    return builder.as_markup()

def get_endpoint_settings_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ endpoint"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Endpoint",
        callback_data="set_default_endpoint"
    ))
    builder.add(InlineKeyboardButton(
        text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å Endpoint",
        callback_data="clear_default_endpoint"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º",
        callback_data="settings_menu"
    ))
    
    builder.adjust(1)
    return builder.as_markup()

def get_clients_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞",
        callback_data="add_client"
    ))
    builder.add(InlineKeyboardButton(
        text="üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        callback_data="list_clients"
    ))
    builder.add(InlineKeyboardButton(
        text="üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞", 
        callback_data="search_client"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="main_menu"
    ))
    builder.adjust(1)
    return builder.as_markup()

def get_client_list_keyboard(clients: List[Client], page: int = 0, per_page: int = 10) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    start_idx = page * per_page
    end_idx = start_idx + per_page
    page_clients = clients[start_idx:end_idx]

    for client in page_clients:
        status_emoji = "üü¢" if client.is_active and not client.is_blocked else "üî¥"
        builder.add(InlineKeyboardButton(
            text=f"{status_emoji} {client.name}",
            callback_data=f"client_details:{client.id}"
        ))

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    nav_buttons = []
    total_pages = (len(clients) - 1) // per_page + 1

    if page > 0:
        nav_buttons.append(InlineKeyboardButton(
            text="‚è™ –ü–µ—Ä–≤–∞—è",
            callback_data="clients_page:0"
        ))
        nav_buttons.append(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"clients_page:{page-1}"
        ))

    if page < total_pages - 1:
        nav_buttons.append(InlineKeyboardButton(
            text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è",
            callback_data=f"clients_page:{page+1}"
        ))
        nav_buttons.append(InlineKeyboardButton(
            text="–ü–æ—Å–ª–µ–¥–Ω—è—è ‚è©",
            callback_data=f"clients_page:{total_pages-1}"
        ))

    if len(nav_buttons) == 2:
        builder.row(nav_buttons[0], nav_buttons[1])
    elif len(nav_buttons) == 4:
        builder.row(nav_buttons[0], nav_buttons[1])
        builder.row(nav_buttons[2], nav_buttons[3])
    elif len(nav_buttons) > 0:
        builder.row(*nav_buttons)

    builder.add(InlineKeyboardButton(
        text="üîô –ú–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–æ–≤",
        callback_data="clients_menu"
    ))

    builder.adjust(1)
    return builder.as_markup()

def get_client_details_keyboard(client_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –Ω–∞–¥ –∫–ª–∏–µ–Ω—Ç–æ–º"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        callback_data=f"edit_client:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
        callback_data=f"toggle_block:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        callback_data=f"client_stats:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üì± QR-–∫–æ–¥",
        callback_data=f"client_qr:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è",
        callback_data=f"client_config:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üåç IP –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
        callback_data=f"client_ip_info:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data=f"delete_client:{client_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        callback_data="list_clients"
    ))
    builder.adjust(2, 2, 2, 1, 1)
    return builder.as_markup()

def get_time_limit_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º"""
    builder = InlineKeyboardBuilder()
    
    # –ß–∞—Å—ã
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è 1 —á–∞—Å", callback_data="time_limit:1h"))
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è 6 —á–∞—Å–æ–≤", callback_data="time_limit:6h"))
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è 12 —á–∞—Å–æ–≤", callback_data="time_limit:12h"))
    
    # –î–Ω–∏
    builder.add(InlineKeyboardButton(text="üìÖ 1 –¥–µ–Ω—å", callback_data="time_limit:1d"))
    builder.add(InlineKeyboardButton(text="üìÖ 3 –¥–Ω—è", callback_data="time_limit:3d"))
    builder.add(InlineKeyboardButton(text="üìÖ 7 –¥–Ω–µ–π", callback_data="time_limit:7d"))
    
    # –ù–µ–¥–µ–ª–∏
    builder.add(InlineKeyboardButton(text="üóìÔ∏è 2 –Ω–µ–¥–µ–ª–∏", callback_data="time_limit:2w"))
    builder.add(InlineKeyboardButton(text="üóìÔ∏è 1 –º–µ—Å—è—Ü", callback_data="time_limit:1m"))
    
    # –ú–µ—Å—è—Ü—ã –∏ –≥–æ–¥—ã  
    builder.add(InlineKeyboardButton(text="üìÜ 3 –º–µ—Å—è—Ü–∞", callback_data="time_limit:3m"))
    builder.add(InlineKeyboardButton(text="üìÜ 6 –º–µ—Å—è—Ü–µ–≤", callback_data="time_limit:6m"))
    builder.add(InlineKeyboardButton(text="üìÜ 1 –≥–æ–¥", callback_data="time_limit:1y"))
    
    builder.add(InlineKeyboardButton(text="‚è∞ –°–≤–æ–π —Å—Ä–æ–∫", callback_data="time_limit:custom"))
    builder.add(InlineKeyboardButton(text="‚ôæÔ∏è –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π", callback_data="time_limit:unlimited"))
    builder.add(InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="cancel_add_client"))
    
    builder.adjust(3, 3, 2, 2, 1, 1, 1)
    return builder.as_markup()

def get_custom_time_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –µ–¥–∏–Ω–∏—Ü –≤—Ä–µ–º–µ–Ω–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è –í —á–∞—Å–∞—Ö", callback_data="custom_time_unit:hours"))
    builder.add(InlineKeyboardButton(text="üìÖ –í –¥–Ω—è—Ö", callback_data="custom_time_unit:days"))
    builder.add(InlineKeyboardButton(text="üóìÔ∏è –í –Ω–µ–¥–µ–ª—è—Ö", callback_data="custom_time_unit:weeks"))
    builder.add(InlineKeyboardButton(text="üìÜ –í –º–µ—Å—è—Ü–∞—Ö", callback_data="custom_time_unit:months"))
    builder.add(InlineKeyboardButton(text="üóìÔ∏è –í –≥–æ–¥–∞—Ö", callback_data="custom_time_unit:years"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_time_selection"))
    
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()

def get_traffic_limit_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üìä 5 GB",
        callback_data="traffic_limit:5"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä 10 GB", 
        callback_data="traffic_limit:10"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä 30 GB",
        callback_data="traffic_limit:30"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä 100 GB",
        callback_data="traffic_limit:100"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ôæÔ∏è –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
        callback_data="traffic_limit:unlimited"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_add_client"
    ))
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()

def get_backup_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üíæ –°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é", 
        callback_data="create_backup"
    ))
    builder.add(InlineKeyboardButton(
        text="üìã –°–ø–∏—Å–æ–∫ –∫–æ–ø–∏–π",
        callback_data="list_backups"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="main_menu"
    ))
    builder.adjust(1)
    return builder.as_markup()

def get_backup_list_keyboard(backups: list) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"""
    builder = InlineKeyboardBuilder()
    for backup in backups[:10]: 
        builder.add(InlineKeyboardButton(
            text=f"üì¶ {backup['filename']}",
            callback_data=f"backup_details:{backup['filename']}"
        ))
    builder.add(InlineKeyboardButton(
        text="üîô –ú–µ–Ω—é –∫–æ–ø–∏–π",
        callback_data="backup_menu"
    ))
    builder.adjust(1)
    return builder.as_markup()

def get_backup_details_keyboard(filename: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–µ–π"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
        callback_data=f"restore_backup:{filename}"
    ))
    builder.add(InlineKeyboardButton(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data=f"delete_backup:{filename}"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –°–ø–∏—Å–æ–∫ –∫–æ–ø–∏–π",
        callback_data="list_backups"
    ))
    builder.adjust(1)
    return builder.as_markup()

def get_confirmation_keyboard(action: str, item_id: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="‚úÖ –î–∞",
        callback_data=f"confirm:{action}:{item_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ùå –ù–µ—Ç",
        callback_data=f"cancel:{action}"
    ))
    builder.adjust(2)
    return builder.as_markup()

def get_edit_client_keyboard(client_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è",
        callback_data=f"edit_name:{client_id}"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üì° –ò–∑–º–µ–Ω–∏—Ç—å Endpoint",
        callback_data=f"edit_endpoint:{client_id}"
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è",
        callback_data=f"edit_expiry:{client_id}"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üìä –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞",
        callback_data=f"edit_traffic_limit:{client_id}"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏",
        callback_data=f"regenerate_keys:{client_id}"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –∫ –∫–ª–∏–µ–Ω—Ç—É",
        callback_data=f"client_details:{client_id}"
    ))
    
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()

def get_time_limit_keyboard_for_edit(client_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    # –ß–∞—Å—ã
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è 1 —á–∞—Å", callback_data=f"edit_time_limit:{client_id}:1h"))
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è 6 —á–∞—Å–æ–≤", callback_data=f"edit_time_limit:{client_id}:6h"))
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è 12 —á–∞—Å–æ–≤", callback_data=f"edit_time_limit:{client_id}:12h"))
    
    # –î–Ω–∏
    builder.add(InlineKeyboardButton(text="üìÖ 1 –¥–µ–Ω—å", callback_data=f"edit_time_limit:{client_id}:1d"))
    builder.add(InlineKeyboardButton(text="üìÖ 3 –¥–Ω—è", callback_data=f"edit_time_limit:{client_id}:3d"))
    builder.add(InlineKeyboardButton(text="üìÖ 7 –¥–Ω–µ–π", callback_data=f"edit_time_limit:{client_id}:7d"))
    
    # –ù–µ–¥–µ–ª–∏
    builder.add(InlineKeyboardButton(text="üóìÔ∏è 2 –Ω–µ–¥–µ–ª–∏", callback_data=f"edit_time_limit:{client_id}:2w"))
    builder.add(InlineKeyboardButton(text="üóìÔ∏è 1 –º–µ—Å—è—Ü", callback_data=f"edit_time_limit:{client_id}:1m"))
    
    # –ú–µ—Å—è—Ü—ã –∏ –≥–æ–¥—ã
    builder.add(InlineKeyboardButton(text="üìÜ 3 –º–µ—Å—è—Ü–∞", callback_data=f"edit_time_limit:{client_id}:3m"))
    builder.add(InlineKeyboardButton(text="üìÜ 6 –º–µ—Å—è—Ü–µ–≤", callback_data=f"edit_time_limit:{client_id}:6m"))
    builder.add(InlineKeyboardButton(text="üìÜ 1 –≥–æ–¥", callback_data=f"edit_time_limit:{client_id}:1y"))
    
    builder.add(InlineKeyboardButton(text="‚è∞ –°–≤–æ–π —Å—Ä–æ–∫", callback_data=f"edit_time_limit:{client_id}:custom"))
    builder.add(InlineKeyboardButton(text="‚ôæÔ∏è –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π", callback_data=f"edit_time_limit:{client_id}:unlimited"))
    
    builder.add(InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=f"edit_client:{client_id}"))
    
    builder.adjust(3, 3, 2, 2, 1, 1, 1)
    return builder.as_markup()

def get_custom_time_keyboard_for_edit(client_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –µ–¥–∏–Ω–∏—Ü –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="‚è±Ô∏è –í —á–∞—Å–∞—Ö", callback_data=f"edit_custom_time_unit:{client_id}:hours"))
    builder.add(InlineKeyboardButton(text="üìÖ –í –¥–Ω—è—Ö", callback_data=f"edit_custom_time_unit:{client_id}:days"))
    builder.add(InlineKeyboardButton(text="üóìÔ∏è –í –Ω–µ–¥–µ–ª—è—Ö", callback_data=f"edit_custom_time_unit:{client_id}:weeks"))
    builder.add(InlineKeyboardButton(text="üìÜ –í –º–µ—Å—è—Ü–∞—Ö", callback_data=f"edit_custom_time_unit:{client_id}:months"))
    builder.add(InlineKeyboardButton(text="üóìÔ∏è –í –≥–æ–¥–∞—Ö", callback_data=f"edit_custom_time_unit:{client_id}:years"))
    
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"edit_expiry:{client_id}"))
    
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()

def get_traffic_limit_keyboard_for_edit(client_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üìä 5 GB",
        callback_data=f"edit_traffic_value:{client_id}:5"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä 10 GB",
        callback_data=f"edit_traffic_value:{client_id}:10"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä 30 GB",
        callback_data=f"edit_traffic_value:{client_id}:30"
    ))
    builder.add(InlineKeyboardButton(
        text="üìä 100 GB",
        callback_data=f"edit_traffic_value:{client_id}:100"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ôæÔ∏è –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
        callback_data=f"edit_traffic_value:{client_id}:unlimited"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üîô –û—Ç–º–µ–Ω–∞",
        callback_data=f"edit_client:{client_id}"
    ))
    
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()